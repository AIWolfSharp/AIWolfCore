<Type Name="ShuffleExtensions" FullName="AIWolf.Common.Util.ShuffleExtensions">
  <TypeSignature Language="C#" Value="public static class ShuffleExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ShuffleExtensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>AIWolfLibCommon</AssemblyName>
    <AssemblyVersion>0.2.6039.22191</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines extension method to shuffle what implements IEnumerable interface.
            </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="Shuffle&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedEnumerable&lt;T&gt; Shuffle&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedEnumerable`1&lt;!!T&gt; Shuffle&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.2.6039.22191</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="s" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
        </typeparam>
        <param name="s">Sequence of T.</param>
        <summary>
            Returns randomized sequence of T.
            </summary>
        <returns>Randomized sequence of T.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
